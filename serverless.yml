# Copyright The Linux Foundation and each contributor to LFX.
# SPDX-License-Identifier: MIT

service: lfx-security-snyk-scm-refresh
frameworkVersion: '^3.19.0'
configValidationMode: warn
variablesResolutionMode: 20210326

package:
  # Exclude all first - selectively add in lambda functions
  # Support for "package.include" and "package.exclude" will be removed with next major release. Please use "package.patterns" instead
  # More Info: https://www.serverless.com/framework/docs/deprecations/#NEW_PACKAGE_PATTERNS
  patterns:
    - '!auth/**'
    - '!bin/*'
    - '!dev.sh'
    - '!docs/**'
    - '!helpers/**'
    - '!Makefile'
    - '!.env/**'
    - '!.venv/**'
    - '!.git*'
    - '!.git/**'
    - '!.vscode/**'
    - '!.pylintrc'
    - '!node_modules/**'
    - '!package-lock.json'
    - '!yarn.lock'
    - '.serverless-wsgi'
    - '*.py'

custom:
  # Config for serverless-prune-plugin - remove all but the 10 most recent
  # versions to avoid the "Code storage limit exceeded" error
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: python3.9
  stage: ${env:STAGE}
  region: us-east-2
  timeout: 900 # 15 minutes
  logRetentionInDays: 30 # must match one of the CF enum values {1, 3, 5, 7, 14, 30, 60, 90, ...}
  lambdaHashingVersion: '20201221'  # Resolution of lambda version hashes was improved with better algorithm, which will be used in next major release. Switch to it now by setting "provider.lambdaHashingVersion" to "20201221" More Info: https://www.serverless.com/framework/docs/deprecations/#LAMBDA_HASHING_VERSION_V2

  iam:
    role:
      # Alongside provider.iam.role.statements managed policies can also be added to this service-wide Role
      # These will also be merged into the generated IAM Role
      managedPolicies:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      statements:
        - Effect: Allow
          Action:
            - cloudwatch:*
          Resource: "*"
        - Effect: Allow
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: "*"

  environment:
    STAGE: ${sls:stage}
    HOME: /tmp
    REGION: us-east-2
    # Logging format, text or json
    LOG_FORMAT: json
    GITHUB_ENTERPRISE_HOST: ${env:GITHUB_ENTERPRISE_HOST}

  stackTags:
    Name: ${self:service}
    stage: ${sls:stage}
    Project: "LFX Security"
    Product: "LFX Security"
    ManagedBy: "Serverless CloudFormation"
    ServiceType: "Product"
    Service: ${self:service}
    ServiceRole: "Backend"
    ProgrammingPlatform: Python
    Owner: "David Deal"
  tags:
    Name: ${self:service}
    stage: ${sls:stage}
    Project: "LFX Security"
    Product: "LFX Security"
    ManagedBy: "Serverless CloudFormation"
    ServiceType: "Product"
    Service: ${self:service}
    ServiceRole: "Backend"
    ProgrammingPlatform: Python
    Owner: "David Deal"

plugins:
  - serverless-python-requirements
  - serverless-plugin-tracing
  # Serverless Finch does s3 uploading. Called with 'sls client deploy'.
  # Also allows bucket removal with 'sls client remove'.
  - serverless-finch
  # To avoid a Code Storage Limit after tons of deploys and revisions - we can prune old versions
  # This plugin allows us to remove/prune the old versions either manually or automatically
  - serverless-prune-plugin

functions:
  lfx-security-snyk-scm-refresh:
    name: lfx-security-snyk-scm-refresh
    handler: main.lambda_handler
    description: "LFX Security Snyk SCM Refresh Lambda"
